{"version":3,"sources":["lib/components/constants.js","lib/components/Circle.js","lib/components/SemiCircle.js","lib/components/Land.js","lib/components/Cloud.js","lib/components/utilities.js","lib/components/Earth.js","../node_modules/events/events.js","lib/DeviceManager.js","index.js"],"names":["TAU","Math","PI","Circle","x","y","radius","fillColor","properties","draw","beginPath","arc","fillStyle","fill","SemiCircle","Land","LAND_COLOR","dx","width","length","center","size","log","earthRadius","earthDiameter","canvas","newX","save","clip","moveTo","lineCap","lineWidth","lineTo","strokeStyle","stroke","restore","update","Cloud","triangulate","dy","sqrt","getDistance","a","b","findClosest","points","distance","closestPoint","iteration","dz","rollCandidate","point","offset","floor","random","earthMask","samples","bestCandidate","bestDistance","candidate","Earth","WATER_COLOR","SHADOW_COLOR","DEFAULT_WIDTH","landProps","cloudProps","lands","prepareEcosystem","clouds","sphere","shadow","min","max","Component","props","qty","sample","maxW","minW","maxL","minL","minSpeed","maxSpeed","iterations","result","bestCoords","push","forEach","land","cloud","EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","module","exports","prototype","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","emit","type","er","handler","len","args","i","listeners","error","arguments","Error","err","context","call","Array","slice","apply","addListener","listener","m","newListener","warned","console","trace","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","key","ret","listenerCount","evlistener","emitter","DeviceManager","onDeviceReady","e","run","addEventListener","bind","app","document","querySelector","height","c","getContext","earthSize","earth","animate","fillRect"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAMA,EAAMC,QAAAA,IAAU,EAAVA,KAAKC;;ACsBTC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAtBf,IAAA,EAAA,QAAA,eAsBeA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCApBTA,IAAAA,EACJ,SAAYC,EAAAA,EAAGC,EAAGC,EAAQC,GAAW,EAAA,KAAA,GAAA,EAAA,KAAA,MAC9BC,KAAAA,WAAa,CAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAIhBD,UAAAA,IAcSJ,EAAAA,WAAAA,IAAAA,EAAAA,KAVbM,KAAAA,KAAO,SAAU,GACqB,IAAA,EAAA,EAAKD,WAAjCJ,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,UAEfG,EAAAA,YACAC,EAAAA,IAAIP,EAAGC,EAAGC,EAAQ,EAAGN,EAA5B,KAAiC,GAC1BY,EAAAA,UAAYL,EACZM,EAAAA,SAIIV,QAAAA,QAAAA;;ACRAW,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAdTA,IAAAA,EACJ,SAAyC,EAAA,GAA3BV,IAAAA,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,UAAa,EAAA,KAAA,GAAA,EAAA,KAAA,MAClCC,KAAAA,WAAa,CAAEJ,EAAF,EAAKC,EAAL,EAAQC,OAAR,EAAgBC,UAAhB,IAYPO,EAAAA,WAAAA,IAAAA,EAAAA,KATbL,KAAAA,KAAO,SAAU,GACqB,IAAA,EAAA,EAAKD,WAAjCJ,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,UACfG,EAAAA,YACAC,EAAAA,IAAIP,EAAGC,EAAGC,EAAkB,IAAVL,KAAKC,GAAU,KAAK,GACtCU,EAAAA,UAAYL,EACZM,EAAAA,SAIIC,QAAAA,QAAAA;;AC8BAC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IA5Cf,IAAA,EAAA,QAAA,eA4CeA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCA1Cf,IAAMC,EAAa,UAEbD,EACJ,SAAuD,EAAA,GAAzCX,IAAAA,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGY,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,KAAQ,EAAA,KAAA,GAAA,EAAA,KAAA,MAChDb,KAAAA,WAAa,CAAEJ,EAAF,EAAKC,EAAL,EAAQY,GAAR,EAAYC,MAAZ,EAAmBC,OAAnB,GACVG,QAAAA,IAAI,KAAKd,YACZY,KAAAA,OAASA,EACTG,KAAAA,YAAcF,EACdG,KAAAA,cAAuB,EAAPH,GAkCVN,EAAAA,WAAAA,IAAAA,EAAAA,KA/BbN,KAAAA,KAAO,SAACgB,GAAe,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAAPC,IACkB,EAAA,EAAKlB,WAA7BJ,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGc,EAAAA,EAAAA,OAAQD,EAAAA,EAAAA,MACdI,QAAAA,IAAyBlB,qBAAAA,EAAQC,OAAAA,GAClCsB,EAAAA,OACAjB,EAAAA,YACAC,EAAAA,IAAI,EAAKS,OAAOhB,EAAG,EAAKgB,OAAOf,EAAG,EAAKkB,YAAa,EAAGvB,EAA9D,KAAmE,GAC5D4B,EAAAA,OACAlB,EAAAA,YACAmB,EAAAA,OAAOzB,EAAGC,GACVyB,EAAAA,QAAU,QACVC,EAAAA,UAAYb,EACZc,EAAAA,OAAO5B,EAAIe,EAAQd,GACnB4B,EAAAA,YAAcjB,EACdkB,EAAAA,SACAC,EAAAA,WAGTC,KAAAA,OAAS,SAAU,GACC,IAAA,EAAA,EAAK5B,WAAfJ,EAAAA,EAAAA,EAAGa,EAAAA,EAAAA,GACPS,EAAOtB,EAEPsB,EAAO,EAAKN,OAAOhB,EAAI,EAAKoB,gBACvB,EAAA,EAAKJ,OAAOhB,EAAI,EAAKoB,eAGvBE,GAAOT,EACTb,EAAAA,EAAIsB,EACJjB,EAAAA,KAAKgB,KAICV,QAAAA,QAAAA;;ACHAsB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAzCf,IAAA,EAAA,QAAA,eAyCeA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAvCTA,IAAAA,EACJ,SAAuD,EAAA,GAAzCjC,IAAAA,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGY,EAAAA,EAAAA,GAAIC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,KAAQ,EAAA,KAAA,GAAA,EAAA,KAAA,MAChDb,KAAAA,WAAa,CAAEJ,EAAF,EAAKC,EAAL,EAAQY,GAAR,EAAYC,MAAZ,EAAmBC,OAAnB,GACbC,KAAAA,OAASA,EACTG,KAAAA,YAAcF,EACdG,KAAAA,cAAuB,EAAPH,GAkCVgB,EAAAA,WAAAA,IAAAA,EAAAA,KA/Bb5B,KAAAA,KAAO,SAAU,GACiB,IAAA,EAAA,EAAKD,WAA7BJ,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EAAGc,EAAAA,EAAAA,OAAQD,EAAAA,EAAAA,MACdI,QAAAA,IAAyBlB,qBAAAA,EAAQC,OAAAA,GAClCsB,EAAAA,OACAjB,EAAAA,YACAC,EAAAA,IAAI,EAAKS,OAAOhB,EAAG,EAAKgB,OAAOf,EAAG,EAAKkB,YAAa,EAAGvB,EAA9D,KAAmE,GAC5D4B,EAAAA,OACAlB,EAAAA,YACAmB,EAAAA,OAAOzB,EAAGC,GACVyB,EAAAA,QAAU,QACVC,EAAAA,UAAYb,EACZc,EAAAA,OAAO5B,EAAIe,EAAQ,EAAKd,GACxB4B,EAAAA,YAAc,QACdC,EAAAA,SACAC,EAAAA,WAGTC,KAAAA,OAAS,SAAU,GACC,IAAA,EAAA,EAAK5B,WAAfJ,EAAAA,EAAAA,EAAGa,EAAAA,EAAAA,GACPS,EAAOtB,EAEPsB,EAAO,EAAKN,OAAOhB,EAAI,EAAKoB,gBACvB,EAAA,EAAKJ,OAAOhB,EAAI,EAAKmB,aAGvBG,GAAOT,EACTb,EAAAA,EAAIsB,EACJjB,EAAAA,KAAKgB,KAICY,QAAAA,QAAAA;;ACuBf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhEO,IAAMC,EAAc,QAAA,YAAA,SAACrB,EAAIsB,GAAOtC,OAAAA,KAAKuC,KAAKvB,EAAKA,EAAKsB,EAAKA,IAEnDE,EAAc,QAAA,YAAA,SAACC,EAAGC,GACtB1B,IAAAA,EAAWyB,EAAEtC,EAAIuC,EAAE,GAAfJ,EAAmBG,EAAErC,EAAIsC,EAAE,GAC/BL,OAAAA,EAAYrB,EAAIsB,IAGZK,EAAc,QAAA,YAAA,SAACC,EAAQF,GAK3B,IAJHG,IAAAA,EAAW,KACXC,OAAJ,EACIC,GAAa,EACX7B,EAAS0B,EAAO1B,SACb6B,EAAY7B,GAAQ,CACrBF,IAAAA,EAAK4B,EAAOG,GAAW5C,EAAIuC,EAAE,GAC7BJ,EAAKM,EAAOG,GAAW3C,EAAIsC,EAAE,GAC7BM,EAAKX,EAAYrB,EAAIsB,IAEV,OAAbO,GAAqBA,EAAWG,KACvBA,EAAAA,EACIJ,EAAAA,EAAOG,IAInBD,OAAAA,GAGIG,EAAgB,QAAA,cAAA,SAACC,EAAOC,GAC5BnD,OAAAA,KAAKoD,MAAMpD,KAAKqD,UAAYH,EAAQC,GAAUD,EAAQC,GAAU,KAAOD,EAAQC,IAG3EG,EAAY,QAAA,UAAA,SAACC,EAASnC,EAAMD,GAIhC,IAHH4B,IAAAA,GAAa,EACbS,OAAJ,EACEC,EAAe,IACRV,EAAY,IAAI,CACjBW,IAAAA,EAAY,CAACT,EAAc9B,EAAOhB,EAAU,EAAPiB,GAAW6B,EAAc9B,EAAOf,EAAGgB,IACxEyB,EAAWL,EAAYG,EAAYY,EAASG,GAAYA,GAE1Db,EAAWY,IACEZ,EAAAA,EACCa,EAAAA,GAIbF,OAAAA;;ACcMG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,IAAAA,EAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GA1Df,EAAA,QAAA,YA0DeA,EAAAA,EAAAA,GAzDf,EAAA,QAAA,gBAyDeA,EAAAA,EAAAA,GAxDf,EAAA,QAAA,UAwDeA,EAAAA,EAAAA,GAvDf,EAAA,QAAA,WAuDeA,EAAAA,EAAAA,GAtDf,EAAA,QAAA,eAsDeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCA/Cf,IAAMC,EAAc,oBACdC,EAAe,qBACfC,EAAgB,IAEhBH,EAAAA,WACkD,SAAA,EAAA,GAAxC1C,IAAAA,EAAAA,EAAAA,MAAO8C,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,WAAY7C,EAAAA,EAAAA,OAAU,EAAA,KAAA,GAAA,EAAA,KAAA,MAC/CA,KAAAA,OAASA,EACT8C,KAAAA,MAAQ,KAAKC,iBAAiBpD,EAAtB,QAA4BiD,EAAW9C,EAAOE,GACtDgD,KAAAA,OAAS,KAAKD,iBAAiB9B,EAAtB,QAA6B4B,EAAY/C,EAAOE,GACzDiD,KAAAA,OAAS,IAAIlE,EAAJ,QAAWiB,EAAOhB,EAAGgB,EAAOf,EAAGa,GAAS6C,EAAeF,GAChES,KAAAA,OAAS,IAAIxD,EAAJ,QAAeM,EAAOhB,EAAGgB,EAAOf,EAAGa,GAAS6C,EAAeD,GAqC9DF,OAAAA,EAAAA,EAAAA,KAAAA,CAAAA,CAAAA,IAAAA,SAlCCW,MAAAA,SAAAA,EAAKC,GACVvE,OAAAA,KAAKoD,MAAMpD,KAAKqD,SAAWkB,GAAOD,MAiC9BX,EA3CTA,GA2CSA,EAAAA,WAAAA,IAAAA,EAAAA,KA9BbO,KAAAA,iBAAmB,SAACM,EAAWC,EAAOrD,EAAMD,GAKnC,IAJCuD,IAAAA,EAA4DD,EAA5DC,IAAKC,EAAuDF,EAAvDE,OAAQC,EAA+CH,EAA/CG,KAAMC,EAAyCJ,EAAzCI,KAAMC,EAAmCL,EAAnCK,KAAMC,EAA6BN,EAA7BM,KAAMC,EAAuBP,EAAvBO,SAAUC,EAAaR,EAAbQ,SACnDC,GAAc,EACdC,EAAS,KAEJD,GAAcR,GAAK,CACpBU,IAAAA,GAAa,EAAUT,EAAAA,WAAAA,EAAQvD,EAAMD,GACpCkE,EAAAA,KACL,IAAIb,EAAU,CACTY,EAAAA,EAAW,GACXA,EAAAA,EAAW,GACVzB,GAAAA,EAAMN,OAAO2B,EAAUC,GACpBtB,MAAAA,EAAMN,OAAOwB,EAAMD,GAClBjB,OAAAA,EAAMN,OAAO0B,EAAMD,GALf,OAAA,EAOZ1D,KAAAA,KAIC+D,OAAAA,GAGT3E,KAAAA,KAAO,SAAU,GACVyD,EAAAA,MAAMqB,QAAQ,SAAA,GAAQC,OAAAA,EAAK/E,KAAKgB,KAChC2C,EAAAA,OAAOmB,QAAQ,SAAA,GAASE,OAAAA,EAAMhF,KAAKgB,KACnC6C,EAAAA,OAAO7D,KAAKgB,GACZ4C,EAAAA,OAAO5D,KAAKgB,KAINmC,QAAAA,QAAAA;;ACrCf,SAAS8B,IACFC,KAAAA,QAAU,KAAKA,SAAW,GAC1BC,KAAAA,cAAgB,KAAKA,oBAAiBC,EAwQ7C,SAASC,EAAWC,GACX,MAAe,mBAARA,EAGhB,SAASC,EAASD,GACT,MAAe,iBAARA,EAGhB,SAASE,EAASF,GACT,MAAe,iBAARA,GAA4B,OAARA,EAGpC,SAASG,EAAYH,GACZA,YAAQ,IAARA,EAnRTI,OAAOC,QAAUV,EAGjBA,EAAaA,aAAeA,EAE5BA,EAAaW,UAAUV,aAAUE,EACjCH,EAAaW,UAAUT,mBAAgBC,EAIvCH,EAAaY,oBAAsB,GAInCZ,EAAaW,UAAUE,gBAAkB,SAASC,GAC5C,IAACR,EAASQ,IAAMA,EAAI,GAAKC,MAAMD,GACjC,MAAME,UAAU,+BAEX,OADFd,KAAAA,cAAgBY,EACd,MAGTd,EAAaW,UAAUM,KAAO,SAASC,GACjCC,IAAAA,EAAIC,EAASC,EAAKC,EAAMC,EAAGC,EAM3BN,GAJC,KAAKjB,UACR,KAAKA,QAAU,IAGJ,UAATiB,KACG,KAAKjB,QAAQwB,OACblB,EAAS,KAAKN,QAAQwB,SAAW,KAAKxB,QAAQwB,MAAMhG,QAAS,CAE5D0F,IADCO,EAAAA,UAAU,cACGC,MACVR,MAAAA,EAGFS,IAAAA,EAAM,IAAID,MAAM,yCAA2CR,EAAK,KAE9DS,MADFC,EAAAA,QAAUV,EACRS,EAORpB,GAAAA,EAFM,EAAA,KAAKP,QAAQiB,IAGrB,OAAO,EAELd,GAAAA,EAAWgB,GACLM,OAAAA,UAAUjG,QAEX,KAAA,EACKqG,EAAAA,KAAK,MACb,MACG,KAAA,EACKA,EAAAA,KAAK,KAAMJ,UAAU,IAC7B,MACG,KAAA,EACKI,EAAAA,KAAK,KAAMJ,UAAU,GAAIA,UAAU,IAC3C,MAEF,QACSK,EAAAA,MAAMpB,UAAUqB,MAAMF,KAAKJ,UAAW,GACrCO,EAAAA,MAAM,KAAMX,QAEnB,GAAIf,EAASa,GAIbG,IAHEQ,EAAAA,MAAMpB,UAAUqB,MAAMF,KAAKJ,UAAW,GAEvCF,GADMJ,EAAAA,EAAQY,SACJvG,OACX8F,EAAI,EAAGA,EAAIF,EAAKE,IACnBC,EAAUD,GAAGU,MAAM,KAAMX,GAGtB,OAAA,GAGTtB,EAAaW,UAAUuB,YAAc,SAAShB,EAAMiB,GAC9CC,IAAAA,EAEA,IAAChC,EAAW+B,GACd,MAAMnB,UAAU,+BA2CX,OAzCF,KAAKf,UACR,KAAKA,QAAU,IAIb,KAAKA,QAAQoC,aACf,KAAKpB,KAAK,cAAeC,EACfd,EAAW+B,EAASA,UACpBA,EAASA,SAAWA,GAE3B,KAAKlC,QAAQiB,GAGTX,EAAS,KAAKN,QAAQiB,IAExBjB,KAAAA,QAAQiB,GAAMtB,KAAKuC,GAGnBlC,KAAAA,QAAQiB,GAAQ,CAAC,KAAKjB,QAAQiB,GAAOiB,GANrClC,KAAAA,QAAQiB,GAAQiB,EASnB5B,EAAS,KAAKN,QAAQiB,MAAW,KAAKjB,QAAQiB,GAAMoB,SAIhDtC,EAHDQ,EAAY,KAAKN,eAGhBF,EAAaY,oBAFb,KAAKV,gBAKFkC,EAAI,GAAK,KAAKnC,QAAQiB,GAAMzF,OAAS2G,IACvCnC,KAAAA,QAAQiB,GAAMoB,QAAS,EACpBb,QAAAA,MAAM,mIAGA,KAAKxB,QAAQiB,GAAMzF,QACJ,mBAAlB8G,QAAQC,OAETA,QAAAA,SAKP,MAGTxC,EAAaW,UAAU8B,GAAKzC,EAAaW,UAAUuB,YAEnDlC,EAAaW,UAAU+B,KAAO,SAASxB,EAAMiB,GACvC,IAAC/B,EAAW+B,GACd,MAAMnB,UAAU,+BAEd2B,IAAAA,GAAQ,EAEHC,SAAAA,IACFC,KAAAA,eAAe3B,EAAM0B,GAErBD,IACK,GAAA,EACCV,EAAAA,MAAM,KAAMP,YAOlB,OAHLS,EAAAA,SAAWA,EACRM,KAAAA,GAAGvB,EAAM0B,GAEP,MAIT5C,EAAaW,UAAUkC,eAAiB,SAAS3B,EAAMiB,GACjDW,IAAAA,EAAMC,EAAUtH,EAAQ8F,EAExB,IAACnB,EAAW+B,GACd,MAAMnB,UAAU,+BAEd,IAAC,KAAKf,UAAY,KAAKA,QAAQiB,GACjC,OAAO,KAML4B,GAHKA,GADF,EAAA,KAAK7C,QAAQiB,IACNzF,OACH,GAAC,EAERqH,IAASX,GACR/B,EAAW0C,EAAKX,WAAaW,EAAKX,WAAaA,SAC3C,KAAKlC,QAAQiB,GAChB,KAAKjB,QAAQ4C,gBACf,KAAK5B,KAAK,iBAAkBC,EAAMiB,QAE/B,GAAI5B,EAASuC,GAAO,CACpBvB,IAAAA,EAAI9F,EAAQ8F,KAAM,GACjBuB,GAAAA,EAAKvB,KAAOY,GACXW,EAAKvB,GAAGY,UAAYW,EAAKvB,GAAGY,WAAaA,EAAW,CAC5CZ,EAAAA,EACX,MAIAwB,GAAAA,EAAW,EACb,OAAO,KAEW,IAAhBD,EAAKrH,QACFA,EAAAA,OAAS,SACP,KAAKwE,QAAQiB,IAEf8B,EAAAA,OAAOD,EAAU,GAGpB,KAAK9C,QAAQ4C,gBACf,KAAK5B,KAAK,iBAAkBC,EAAMiB,GAG/B,OAAA,MAGTnC,EAAaW,UAAUsC,mBAAqB,SAAS/B,GAC/CgC,IAAAA,EAAK1B,EAEL,IAAC,KAAKvB,QACR,OAAO,KAGL,IAAC,KAAKA,QAAQ4C,eAKT,OAJkB,IAArBnB,UAAUjG,OACZ,KAAKwE,QAAU,GACR,KAAKA,QAAQiB,WACb,KAAKjB,QAAQiB,GACf,KAILQ,GAAqB,IAArBA,UAAUjG,OAAc,CACrByH,IAAAA,KAAO,KAAKjD,QACH,mBAARiD,GACCD,KAAAA,mBAAmBC,GAInB,OAFFD,KAAAA,mBAAmB,kBACnBhD,KAAAA,QAAU,GACR,KAKLG,GAAAA,EAFQ,EAAA,KAAKH,QAAQiB,IAGlB2B,KAAAA,eAAe3B,EAAMM,QACrB,GAAIA,EAEFA,KAAAA,EAAU/F,QACf,KAAKoH,eAAe3B,EAAMM,EAAUA,EAAU/F,OAAS,IAIpD,cAFA,KAAKwE,QAAQiB,GAEb,MAGTlB,EAAaW,UAAUa,UAAY,SAASN,GAQnCiC,OANF,KAAKlD,SAAY,KAAKA,QAAQiB,GAE1Bd,EAAW,KAAKH,QAAQiB,IACzB,CAAC,KAAKjB,QAAQiB,IAEd,KAAKjB,QAAQiB,GAAMc,QAJnB,IAQVhC,EAAaW,UAAUyC,cAAgB,SAASlC,GAC1C,GAAA,KAAKjB,QAAS,CACZoD,IAAAA,EAAa,KAAKpD,QAAQiB,GAE1Bd,GAAAA,EAAWiD,GACb,OAAO,EACJ,GAAIA,EACP,OAAOA,EAAW5H,OAEf,OAAA,GAGTuE,EAAaoD,cAAgB,SAASE,EAASpC,GACtCoC,OAAAA,EAAQF,cAAclC;;AChRhBqC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAZf,IAAA,EAAA,QAAA,UAYeA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,GAAAA,iBAAAA,GAAAA,mBAAAA,EAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,kEAAAA,GAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,IAAAA,OAAAA,eAAAA,OAAAA,eAAAA,EAAAA,GAAAA,EAAAA,UAAAA,GAVTA,IAAAA,EAAAA,SAAAA,GAUSA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GATbC,OAAAA,EAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,WAAAA,OAAAA,eAAAA,IAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAAAA,EAAAA,cAAgB,SAAK,GACdvC,EAAAA,KAAK,cAAewC,IAG3BC,EAAAA,IAAM,WACKC,SAAAA,iBAAiB,cAAe,EAAKH,cAAcI,KAA5D,IAAwE,IACzE,EAAA,EAAA,GAGYL,OAAAA,EAAAA,EAVavD,EAAAA,cAUbuD,EAVTA,GAUSA,QAAAA,QAAAA;;AC+Cf,aA3DA,IAAA,EAAA,QAAA,0BA2DA,EAAA,EAAA,GA1DA,EAAA,QAAA,uBA0DA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxDA,IAAMM,EAAM,IAAIN,EAAJ,QAEZM,EAAIpB,GAAG,cAAe,WAChB1G,IAAAA,EAAS+H,SAASC,cAAc,UAE7BvI,EAAAA,MAAQ,IACRwI,EAAAA,OAAS,IAEZC,IAAAA,EAAIlI,EAAOmI,WAAW,MACpBxI,EAAS,CACVK,EAAAA,EAAOP,MAAQ,EACfO,EAAAA,EAAOiI,OAAS,GAEbpI,QAAAA,IAAI,SAAUF,GAChB6C,IAAAA,EAAa,CACZ,IAAA,GACC,KAAA,GACA,KAAA,EACA,KAAA,GACA,KAAA,GACI,SAAA,EACA,SAAA,GACF,OAAA,CAAC,CAAE7D,EAAG,GAAIC,EAAG,MAEjB2D,EAAY,CACX,IAAA,GACC,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACI,SAAA,EACA,SAAA,GACF,OAAA,CAAC,CAAE5D,EAAG,GAAIC,EAAG,MAEjBwJ,EAAY,IACdC,EAAQ,MAEHC,SAAAA,IACeA,sBAAAA,GACpBnJ,EAAAA,UAAY,uBACZoJ,EAAAA,SAAS,EAAG,EAAGvI,EAAOP,MAAOO,EAAOiI,SAC9B,EAAA,IAAI9F,EAAJ,QAAU,CAAEK,WAAF,EAAcD,UAAd,EAAyB9C,MAAO2I,EAAWzI,OAA3C,KACZX,KAAKkJ,GAELzF,EAAAA,MAAMqB,QAAQ,SAAQ,GACrBnD,EAAAA,OAAOuH,KAGRvF,EAAAA,OAAOmB,QAAQ,SAAS,GACtBnD,EAAAA,OAAOuH,KAIjBI,KAGFR,EAAIH","file":"index.map","sourceRoot":"../../src","sourcesContent":["export const TAU = Math.PI * 2;\n","import { TAU } from './constants';\n\nclass Circle {\n  constructor(x, y, radius, fillColor) {\n    this.properties = {\n      x,\n      y,\n      radius,\n      fillColor,\n    };\n  }\n\n  draw = canvas => {\n    const { x, y, radius, fillColor } = this.properties;\n\n    canvas.beginPath();\n    canvas.arc(x, y, radius, 0, TAU, false);\n    canvas.fillStyle = fillColor;\n    canvas.fill();\n  };\n}\n\nexport default Circle;\n","class SemiCircle {\n  constructor({ x, y, radius, fillColor }) {\n    this.properties = { x, y, radius, fillColor };\n  }\n\n  draw = canvas => {\n    const { x, y, radius, fillColor } = this.properties;\n    canvas.beginPath();\n    canvas.arc(x, y, radius, Math.PI * 1.5, 1.5, false);\n    canvas.fillStyle = fillColor;\n    canvas.fill();\n  };\n}\n\nexport default SemiCircle;\n","import { TAU } from './constants';\n\nconst LAND_COLOR = '#85cc66';\n\nclass Land {\n  constructor({ x, y, dx, width, length, center, size }) {\n    this.properties = { x, y, dx, width, length };\n    console.log(this.properties);\n    this.center = center;\n    this.earthRadius = size;\n    this.earthDiameter = size * 2;\n  }\n\n  draw = (canvas, newX = null) => {\n    const { x, y, length, width } = this.properties;\n    console.log(`drawing land at x:${x} y: ${y}`);\n    canvas.save();\n    canvas.beginPath();\n    canvas.arc(this.center.x, this.center.y, this.earthRadius, 0, TAU, false);\n    canvas.clip();\n    canvas.beginPath();\n    canvas.moveTo(x, y);\n    canvas.lineCap = 'round';\n    canvas.lineWidth = width;\n    canvas.lineTo(x + length, y);\n    canvas.strokeStyle = LAND_COLOR;\n    canvas.stroke();\n    canvas.restore();\n  };\n\n  update = canvas => {\n    const { x, dx } = this.properties;\n    let newX = x;\n\n    if (newX < this.center.x - this.earthDiameter) {\n      newX = this.center.x + this.earthDiameter;\n    }\n\n    newX = newX - dx;\n    this.x = newX;\n    this.draw(canvas);\n  };\n}\n\nexport default Land;\n","import { TAU } from './constants';\n\nclass Cloud {\n  constructor({ x, y, dx, width, length, center, size }) {\n    this.properties = { x, y, dx, width, length };\n    this.center = center;\n    this.earthRadius = size;\n    this.earthDiameter = size * 2;\n  }\n\n  draw = canvas => {\n    const { x, y, length, width } = this.properties;\n    console.log(`drawing land at x:${x} y: ${y}`);\n    canvas.save();\n    canvas.beginPath();\n    canvas.arc(this.center.x, this.center.y, this.earthRadius, 0, TAU, false);\n    canvas.clip();\n    canvas.beginPath();\n    canvas.moveTo(x, y);\n    canvas.lineCap = 'round';\n    canvas.lineWidth = width;\n    canvas.lineTo(x + length, this.y);\n    canvas.strokeStyle = 'white';\n    canvas.stroke();\n    canvas.restore();\n  };\n\n  update = canvas => {\n    const { x, dx } = this.properties;\n    let newX = x;\n\n    if (newX < this.center.x - this.earthDiameter) {\n      newX = this.center.x + this.earthRadius;\n    }\n\n    newX = newX - dx;\n    this.x = newX;\n    this.draw(canvas);\n  };\n}\n\nexport default Cloud;\n","export const triangulate = (dx, dy) => Math.sqrt(dx * dx + dy + dy);\n\nexport const getDistance = (a, b) => {\n  const [dx, dy] = [a.x - b[0], a.y - b[1]];\n  return triangulate(dx, dy);\n};\n\nexport const findClosest = (points, b) => {\n  let distance = null;\n  let closestPoint;\n  let iteration = -1;\n  const length = points.length;\n  while (++iteration < length) {\n    const dx = points[iteration].x - b[0];\n    const dy = points[iteration].y - b[1];\n    const dz = triangulate(dx, dy);\n\n    if (distance === null || distance > dz) {\n      distance = dz;\n      closestPoint = points[iteration];\n    }\n  }\n\n  return closestPoint;\n};\n\nexport const rollCandidate = (point, offset) => {\n  return Math.floor(Math.random() * (point + offset - (point - offset) + 1)) + (point - offset);\n};\n\nexport const earthMask = (samples, size, center) => {\n  let iteration = -1;\n  let bestCandidate,\n    bestDistance = 0;\n  while (++iteration < 20) {\n    const candidate = [rollCandidate(center.x, size * 2), rollCandidate(center.y, size)];\n    const distance = getDistance(findClosest(samples, candidate), candidate);\n\n    if (distance > bestDistance) {\n      bestDistance = distance;\n      bestCandidate = candidate;\n    }\n  }\n\n  return bestCandidate;\n};\n\n// function earthMask(samples) {\n//   var bestCandidate,\n//     bestDistance = 0;\n//   //The higher the iteration the better the distribution\n//   //Performance takes a hit with higher iteration\n//   for (var i = 0; i < 20; ++i) {\n//     var c = [\n//         Math.floor(Math.random() * (center.x + 240 - (center.x - 240) + 1)) + (center.x - 240),\n//         Math.floor(Math.random() * (center.y + 120 - (center.y - 120) + 1)) + (center.y - 120),\n//       ],\n//       d = distance(findClosest(samples, c), c);\n//     if (d > bestDistance) {\n//       bestDistance = d;\n//       bestCandidate = c;\n//     }\n//   }\n//   return bestCandidate;\n// }\n","import Circle from './Circle';\nimport SemiCircle from './SemiCircle';\nimport Land from './Land';\nimport Cloud from './Cloud';\nimport { earthMask } from './utilities';\n\n/*\nboth cloud and land props have the following shape with all keys as int:\n{ qty, data, maxW, minW, maxL, minL, minSpeed, maxSpeed }\n\n*/\nconst WATER_COLOR = 'rgb(25, 118, 181)';\nconst SHADOW_COLOR = 'rgba(0, 0, 0, 0.4)';\nconst DEFAULT_WIDTH = 120;\n\nclass Earth {\n  constructor({ width, landProps, cloudProps, center }) {\n    this.center = center;\n    this.lands = this.prepareEcosystem(Land, landProps, width, center);\n    this.clouds = this.prepareEcosystem(Cloud, cloudProps, width, center);\n    this.sphere = new Circle(center.x, center.y, width || DEFAULT_WIDTH, WATER_COLOR);\n    this.shadow = new SemiCircle(center.x, center.y, width || DEFAULT_WIDTH, SHADOW_COLOR);\n  }\n\n  static random(min, max) {\n    return Math.floor(Math.random() * max) + min;\n  }\n\n  prepareEcosystem = (Component, props, size, center) => {\n    const { qty, sample, maxW, minW, maxL, minL, minSpeed, maxSpeed } = props;\n    let iterations = -1;\n    let result = [];\n\n    while (++iterations <= qty) {\n      const bestCoords = earthMask(sample, size, center);\n      result.push(\n        new Component({\n          x: bestCoords[0],\n          y: bestCoords[1],\n          dx: Earth.random(minSpeed, maxSpeed),\n          width: Earth.random(minW, maxW),\n          length: Earth.random(minL, maxL),\n          center,\n          size,\n        })\n      );\n    }\n    return result;\n  };\n\n  draw = canvas => {\n    this.lands.forEach(land => land.draw(canvas));\n    this.clouds.forEach(cloud => cloud.draw(canvas));\n    this.shadow.draw(canvas);\n    this.sphere.draw(canvas);\n  };\n}\n\nexport default Earth;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","import { EventEmitter } from 'events';\n\nclass DeviceManager extends EventEmitter {\n  onDeviceReady = e => {\n    this.emit('deviceready', e);\n  };\n\n  run = () => {\n    document.addEventListener('deviceready', this.onDeviceReady.bind(this), false);\n  };\n}\n\nexport default DeviceManager;\n","import Earth from './lib/components/Earth';\nimport DeviceManager from './lib/DeviceManager';\n\nconst app = new DeviceManager();\n\napp.on('deviceready', function() {\n  var canvas = document.querySelector('canvas');\n\n  canvas.width = 980;\n  canvas.height = 661;\n\n  var c = canvas.getContext('2d');\n  const center = {\n    x: canvas.width / 2,\n    y: canvas.height / 2,\n  };\n  console.log('center', center);\n  const cloudProps = {\n    qty: 25,\n    maxW: 20,\n    minW: 5,\n    maxL: 30,\n    minL: 18,\n    maxSpeed: 1,\n    minSpeed: 0.2,\n    sample: [{ x: 20, y: 10 }],\n  };\n  const landProps = {\n    qty: 25,\n    maxW: 25,\n    minW: 10,\n    maxL: 30,\n    minL: 18,\n    maxSpeed: 0,\n    minSpeed: 0.5,\n    sample: [{ x: 20, y: 10 }],\n  };\n  const earthSize = 120;\n  let earth = null;\n\n  function animate() {\n    requestAnimationFrame(animate);\n    c.fillStyle = 'rgba(11, 21, 56,0.3)';\n    c.fillRect(0, 0, canvas.width, canvas.height);\n    earth = new Earth({ cloudProps, landProps, width: earthSize, center });\n    earth.draw(c);\n\n    earth.lands.forEach(land => {\n      land.update(c);\n    });\n\n    earth.clouds.forEach(cloud => {\n      cloud.update(c);\n    });\n  }\n\n  animate();\n});\n\napp.run();\n"]}